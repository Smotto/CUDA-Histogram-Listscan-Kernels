{"data": {"elapsed_time": 6820400, "end_file": "E:\\Development\\CodingProjects\\CSC163-Parallel-Programming\\A3\\source\\ListScan\\template.cu", "end_function": "main", "end_line": 145, "end_time": 791341844736000, "id": 0, "kind": "Generic", "message": "Importing data and creating memory on host", "mpi_rank": 0, "parent_id": -1, "start_file": "E:\\Development\\CodingProjects\\CSC163-Parallel-Programming\\A3\\source\\ListScan\\template.cu", "start_function": "main", "start_line": 142, "start_time": 791341837915600, "stopped": true}, "type": "timer"}
{"data": {"file": "E:\\Development\\CodingProjects\\CSC163-Parallel-Programming\\A3\\source\\ListScan\\template.cu", "function": "main", "level": "Trace", "line": 148, "message": "The number of input elements in the input is 1033", "mpi_rank": 0, "time": 791341844998100}, "type": "logger"}
{"data": {"elapsed_time": 129244100, "end_file": "E:\\Development\\CodingProjects\\CSC163-Parallel-Programming\\A3\\source\\ListScan\\template.cu", "end_function": "main", "end_line": 163, "end_time": 791341974397100, "id": 1, "kind": "GPU", "message": "Allocating device memory.", "mpi_rank": 0, "parent_id": -1, "start_file": "E:\\Development\\CodingProjects\\CSC163-Parallel-Programming\\A3\\source\\ListScan\\template.cu", "start_function": "main", "start_line": 150, "start_time": 791341845153000, "stopped": true}, "type": "timer"}
{"data": {"elapsed_time": 35900, "end_file": "E:\\Development\\CodingProjects\\CSC163-Parallel-Programming\\A3\\source\\ListScan\\template.cu", "end_function": "main", "end_line": 169, "end_time": 791341974534100, "id": 2, "kind": "GPU", "message": "Clearing output device memory.", "mpi_rank": 0, "parent_id": -1, "start_file": "E:\\Development\\CodingProjects\\CSC163-Parallel-Programming\\A3\\source\\ListScan\\template.cu", "start_function": "main", "start_line": 165, "start_time": 791341974498200, "stopped": true}, "type": "timer"}
{"data": {"elapsed_time": 868200, "end_file": "E:\\Development\\CodingProjects\\CSC163-Parallel-Programming\\A3\\source\\ListScan\\template.cu", "end_function": "main", "end_line": 175, "end_time": 791341975464600, "id": 3, "kind": "GPU", "message": "Copying input host memory to device.", "mpi_rank": 0, "parent_id": -1, "start_file": "E:\\Development\\CodingProjects\\CSC163-Parallel-Programming\\A3\\source\\ListScan\\template.cu", "start_function": "main", "start_line": 171, "start_time": 791341974596400, "stopped": true}, "type": "timer"}
{"data": {"elapsed_time": 120700, "end_file": "E:\\Development\\CodingProjects\\CSC163-Parallel-Programming\\A3\\source\\ListScan\\template.cu", "end_function": "main", "end_line": 199, "end_time": 791341975691300, "id": 4, "kind": "Compute", "message": "Performing CUDA computation", "mpi_rank": 0, "parent_id": -1, "start_file": "E:\\Development\\CodingProjects\\CSC163-Parallel-Programming\\A3\\source\\ListScan\\template.cu", "start_function": "main", "start_line": 182, "start_time": 791341975570600, "stopped": true}, "type": "timer"}
{"data": {"elapsed_time": 35100, "end_file": "E:\\Development\\CodingProjects\\CSC163-Parallel-Programming\\A3\\source\\ListScan\\template.cu", "end_function": "main", "end_line": 205, "end_time": 791341975790600, "id": 5, "kind": "Copy", "message": "Copying output device memory to host", "mpi_rank": 0, "parent_id": -1, "start_file": "E:\\Development\\CodingProjects\\CSC163-Parallel-Programming\\A3\\source\\ListScan\\template.cu", "start_function": "main", "start_line": 201, "start_time": 791341975755500, "stopped": true}, "type": "timer"}
{"data": {"elapsed_time": 135600, "end_file": "E:\\Development\\CodingProjects\\CSC163-Parallel-Programming\\A3\\source\\ListScan\\template.cu", "end_function": "main", "end_line": 214, "end_time": 791341975986600, "id": 6, "kind": "GPU", "message": "Freeing device memory", "mpi_rank": 0, "parent_id": -1, "start_file": "E:\\Development\\CodingProjects\\CSC163-Parallel-Programming\\A3\\source\\ListScan\\template.cu", "start_function": "main", "start_line": 207, "start_time": 791341975851000, "stopped": true}, "type": "timer"}
{"data": {"correctq": true, "message": "The solution is correct"}, "type": "solution"}
